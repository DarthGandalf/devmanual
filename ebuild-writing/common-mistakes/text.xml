<?xml version="1.0"?>
<guide self="ebuild-writing/common-mistakes/">
<chapter>
<title>Common Mistakes</title>

<body>
<p>
This section contains information on the common mistakes developers make when
writing ebuilds.
</p>
</body>

<section>
<title>Invalid use of <c>static</c> use-flag</title>
<body>
The <c>static</c> use-flag should only be used to make a binary use static
linking instead of dynamic linking.  It should not be used to make a library
install static libraries.  The package should always (if possible) install both
the dynamic and static libraries.
</body>
</section>

<section>
<title>Invalid use of <c>ROOT</c></title>
<body>
<p>
The usage of <c>ROOT</c> is only designed to influence the way the package is
installed (ie. into <c>ROOT</c>) - building and compiling should not depend on
<c>ROOT</c>. As a consequence of this the usage of <c>ROOT</c> in <c>src_*</c>
functions is not allowed.
</p>

<p>
See also <uri link="::ebuild-writing/variables#ROOT"/>.
</p>
</body>
</section>

<section>
<title>Referencing the full path to documentation files that could be
compressed</title>
<body>
When printing out to the users where to find files like INSTALL, do not specify
the full path since <c>PORTAGE_COMPRESS</c> comes into play.  The file could be
compressed with gzip, bzip2, or some other random compression tool.  So,
instead of doing this:

<codesample lang="ebuild">
elog "They are listed in /usr/share/doc/${PF}/INSTALL.gz"
</codesample>

Do something like:

<codesample lang="ebuild">
elog "They are listed in the INSTALL file in /usr/share/doc/${PF}"
</codesample>
</body>
</section>

<section>
<title>Build log not verbose</title>
<body>
When writing ebuilds, you should always check the build log, because the build
system might ignore CC/CXX/LD/CFLAGS/LDFLAGS and such or add undesired flags
by default. In order to analyze this and have complete information, in case
someone reports a bug for your package, the <b>build log must always be verbose.</b>
<p>
There are several ways to fix non-verbose build logs depending on the build system:
</p>
<p>
For <c>cmake</c> based build systems it should be sufficient that the ebuild calls
cmake-utils_src_compile which picks up the cmake-utils.eclass variable 'CMAKE_VERBOSE=1'
by default. If you call emake directly for whatever reason, you can do 'emake VERBOSE=1'
(note that cmake-utils_src_compile takes arguments as well which are passed to make).
</p>

<p>
For <c>autotools</c> based build systems you can pass '--disable-silent-rules' to econf,
or use EAPI 5 where that argument is passed automatically. 'emake V=1' should also work.
</p>

<p>
For custom Makefiles you often have to write a patch. Try to get upstream to include an
option like 'V=1' to enable full verbosity.
</p>
<note> If you notice non-verbose build log in any package open a bug and make it block the
tracker bug #429308</note>
</body>
</section>

</chapter>

</guide>
